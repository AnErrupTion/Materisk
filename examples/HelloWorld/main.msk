//export "main";

// TODO: Scoped using declarations
using std = import "corelib.msk";

mod pub NativeImpl
{
	fn impl pub Console_print(str text) void {}
	fn impl pub Memory_allocate(u64 size) ptr void { return (ptr void)0; }
	fn impl pub Memory_free(ptr void pointer) void {}
}

stc dyn VgaEntry
{
	fld pub character u8;
	fld pub color u8;
}

mod pub Program
{
	fn pub main() void
	{
		var entry ptr VgaEntry = alloca VgaEntry;
		entry->character = 65;
		entry->color = 15;

		var pointer ptr VgaEntry = (ptr VgaEntry)0xB8000;
		pointer[0] = entry;

		while (true) {}
	}
}